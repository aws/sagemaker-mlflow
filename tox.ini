# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = black-format,flake8,twine,py{39,310,311}-mlflow{28,29,210,211,212}

[flake8]
max-line-length = 120
exclude =
    build/
    .git
    __pycache__
    .tox
    venv/
    env/

max-complexity = 10

ignore =
    C901,
    # whitespace before ':': Black disagrees with and explicitly violates this.
    E203

require-code = True

[doc8]
ignore-path=.tox,sagemaker_mlflow.egg-info

[testenv]
passenv =
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    AWS_SESSION_TOKEN
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
    AWS_DEFAULT_REGION
    CODEBUILD_BUILD_ARN
    MLFLOW_TRACKING_SERVER_URI
    MLFLOW_TRACKING_SERVER_NAME
    REGION
# {posargs} can be passed in by additional arguments specified when invoking tox.
# Can be used to specify which tests to run, e.g.: tox -- -s
commands =
    pytest {posargs}
deps =
    mlflow28: mlflow>=2.8,<2.9
    mlflow29: mlflow>=2.9,<2.10
    mlflow210: mlflow>=2.10,<2.11
    mlflow211: mlflow>=2.11,<2.12
    mlflow212: mlflow>=2.12,<2.13
    .[test]
depends =
    py{39,310,311}-mlflow{28,29,210,211,212}: clean

[testenv:runcoverage]
description = run unit tests with coverage
commands =
    pytest --cov=sagemaker_mlflow --cov-append {posargs}
    {env:IGNORE_COVERAGE:} coverage report -i --fail-under=86

[testenv:flake8]
skipdist = true
skip_install = true
deps =
    -r requirements/flake8_requirements.txt
commands =
    flake8

[testenv:twine]
# https://packaging.python.org/guides/making-a-pypi-friendly-readme/#validating-restructuredtext-markup
skip_install = true
deps =
    -r requirements/twine_requirements.txt
commands =
    python setup.py sdist
    twine check dist/*.tar.gz

[testenv:black-format]
# Used during development (before committing) to format .py files.
skip_install = true
setenv =
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
deps =
    -r requirements/black_requirements.txt
commands =
    black -l 120 ./

[testenv:black-check]
# Used by automated build steps to check that all files are properly formatted.
skip_install = true
setenv =
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
deps =
    -r requirements/black_requirements.txt
commands =
    black --color --check -l 120 ./

[testenv:clean]
skip_install = true
commands =
    coverage erase

[testenv:typing]
# Do not skip installation here, the extras are needed for mypy to get type info
skip_install = false
extras =
    all
deps =
    -r requirements/mypy_requirements.txt
commands =
    mypy sagemaker_mlflow

[testenv:collect-tests]
# this needs to succeed for tests to display in some IDEs
deps = .[test]
commands =
    pytest --collect-only
